namespace = isb

event = {
	id = isb.1
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		#every_country = {
		#	limit = { is_ai = yes }
		#	add_modifier = {
		#		modifier = "ai_ship_upkeep"
		#		days = -1
		#	}
		#}

		every_country = {
			limit = {
				is_country_type = fallen_empire
			}
			add_modifier = {
				modifier = "fallen_ship_upkeep"
				days = -1
			}
		}

		#every_country = {
		#	limit = { is_ai = no }
		#	add_modifier = {
		#		modifier = "test_mode"
		#		days = -1
		#	}
		#}
	}
}

# Test mode
event = {
	id = isb.99
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_ai = no }
			add_modifier = {
				modifier = "test_mode"
				days = -1
			}
		}
	}
}

# Test mode off
event = {
	id = isb.98
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			limit = { is_ai = no }
			remove_modifier = "test_mode"
		}
	}
}

# clears difficulty buffs from swarm / ed and global flags
country_event = {
	id = isb.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_crisis_easy
			}
			
			remove_global_flag = flag_crisis_easy
		}
		
		if = {
			limit = {
				has_global_flag = flag_crisis_hard
			}
			
			remove_global_flag = flag_crisis_hard
		}
		
		every_country = {
			limit = {
				OR = {
					is_country_type = swarm
					is_country_type = extradimensional
					is_country_type = extradimensional_2
					is_country_type = extradimensional_3
				}
			}
			
			if = {
				limit = {
					has_modifier = mod_crisis_easy
				}

				remove_modifier = "mod_crisis_easy"
			}

			if = {
				limit = {
					has_modifier = mod_crisis_hard
				}

				remove_modifier = "mod_crisis_hard"
			}
		}
	}
}

country_event = {
	id = isb.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_global_flag = flag_crisis_easy
			}
			add_modifier = {
				modifier = mod_crisis_easy
				days = -1
			}
			else = {
				if = {
					limit = {
						has_global_flag = flag_crisis_hard
					}
					add_modifier = {
						modifier = mod_crisis_hard
						days = -1
					}
				}
			}
		}		
	}
}					

# Crisis check for opinion boost every 5 years.
event = {
	id = isb.2
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# initialise and reset
		if = {
			limit = {
				has_global_flag = crisis_threat_low
			}

			remove_global_flag = crisis_threat_low
		}

		if = {
			limit = {
				has_global_flag = crisis_threat_med
			}

			remove_global_flag = crisis_threat_med
		}

		if = {
			limit = {
				has_global_flag = crisis_threat_high
			}

			remove_global_flag = crisis_threat_high
		}

		random_country = {
			save_event_target_as = crisis_var
			set_variable = {
				which = "crisis_threat_count"
				value = 1
			}
		}

		# ed 1 threat
		if = {
			random_country = {
				limit = {
					is_country_type = extradimensional
				}

				random_country = {
					limit = {
						is_same_value = event_target:crisis_var
					}
					change_variable = {
						which = "crisis_threat_count"
						value = 1
					}
				}

				# ~5 stations per system, 5 systems
				if = {
					limit = {
						count_owned_ships = {
							limit = { is_ship_size = military_station_large_ed }
							count > 24
						}
					}
					random_country = {
						limit = {
							is_same_value = event_target:crisis_var
						}
						change_variable = {
							which = "crisis_threat_count"
							value = 1
						}
					}

					# 10 systems
					if = {
						limit = {
							count_owned_ships = {
								limit = { is_ship_size = military_station_large_ed }
								count > 49
							}
						}
						random_country = {
							limit = {
								is_same_value = event_target:crisis_var
							}
							change_variable = {
								which = "crisis_threat_count"
								value = 1
							}
						}

						# 20 systems
						if = {
							limit = {
								count_owned_ships = {
									limit = { is_ship_size = military_station_large_ed }
									count > 99
								}
							}
							random_country = {
								limit = {
									is_same_value = event_target:crisis_var
								}
								change_variable = {
									which = "crisis_threat_count"
									value = 2
								}
							}
						}
					}
				}
			}
		}

		# ed 2 threat
		if = {
			random_country = {
				limit = {
					is_country_type = extradimensional_2
				}

				random_country = {
					limit = {
						is_same_value = event_target:crisis_var
					}
					change_variable = {
						which = "crisis_threat_count"
						value = 1
					}
				}

				# ~5 stations per system, 5 systems
				if = {
					limit = {
						count_owned_ships = {
							limit = { is_ship_size = military_station_large_ed }
							count > 24
						}
					}
					random_country = {
						limit = {
							is_same_value = event_target:crisis_var
						}
						change_variable = {
							which = "crisis_threat_count"
							value = 1
						}
					}

					# 10 systems
					if = {
						limit = {
							count_owned_ships = {
								limit = { is_ship_size = military_station_large_ed }
								count > 49
							}
						}
						random_country = {
							limit = {
								is_same_value = event_target:crisis_var
							}
							change_variable = {
								which = "crisis_threat_count"
								value = 1
							}
						}

						# 20 systems
						if = {
							limit = {
								count_owned_ships = {
									limit = { is_ship_size = military_station_large_ed }
									count > 99
								}
							}
							random_country = {
								limit = {
									is_same_value = event_target:crisis_var
								}
								change_variable = {
									which = "crisis_threat_count"
									value = 2
								}
							}
						}
					}
				}
			}
		}

		# ed 3 threat
		if = {
			random_country = {
				limit = {
					is_country_type = extradimensional_3
				}

				random_country = {
					limit = {
						is_same_value = event_target:crisis_var
					}
					change_variable = {
						which = "crisis_threat_count"
						value = 1
					}
				}

				# ~5 stations per system, 5 systems
				if = {
					limit = {
						count_owned_ships = {
							limit = { is_ship_size = military_station_large_ed }
							count > 24
						}
					}
					random_country = {
						limit = {
							is_same_value = event_target:crisis_var
						}
						change_variable = {
							which = "crisis_threat_count"
							value = 1
						}
					}

					# 10 systems
					if = {
						limit = {
							count_owned_ships = {
								limit = { is_ship_size = military_station_large_ed }
								count > 49
							}
						}
						random_country = {
							limit = {
								is_same_value = event_target:crisis_var
							}
							change_variable = {
								which = "crisis_threat_count"
								value = 1
							}
						}

						# 20 systems
						if = {
							limit = {
								count_owned_ships = {
									limit = { is_ship_size = military_station_large_ed }
									count > 99
								}
							}
							random_country = {
								limit = {
									is_same_value = event_target:crisis_var
								}
								change_variable = {
									which = "crisis_threat_count"
									value = 2
								}
							}
						}
					}
				}
			}
		}

		# swarm threat
		if = {
			random_country = {
				limit = {
					is_country_type = swarm
				}

				random_country = {
					limit = {
						is_same_value = event_target:crisis_var
					}
					change_variable = {
						which = "crisis_threat_count"
						value = 3
					}
				}

				# Count planets
				if = {
					limit = {
						num_owned_planets > 10
					}
					random_country = {
						limit = {
							is_same_value = event_target:crisis_var
						}
						change_variable = {
							which = "crisis_threat_count"
							value = 1
						}
					}

					# 25 systems
					if = {
						limit = {
							num_owned_planets > 24
						}
						random_country = {
							limit = {
								is_same_value = event_target:crisis_var
							}
							change_variable = {
								which = "crisis_threat_count"
								value = 5
							}
						}

						# 50 systems
						if = {
							limit = {
								num_owned_planets > 49
							}
							random_country = {
								limit = {
									is_same_value = event_target:crisis_var
								}
								change_variable = {
									which = "crisis_threat_count"
									value = 8
								}
							}
						}
					}
				}
			}
		}

		# AI threat. Didn't buff this crisis so count it as weak for now
		if = {
			random_country = {
				limit = {
					is_country_type = ai_empire
				}

				random_country = {
					limit = {
						is_same_value = event_target:crisis_var
					}
					change_variable = {
						which = "crisis_threat_count"
						value = 3
					}
				}

				# Count planets
				if = {
					limit = {
						num_owned_planets > 10
					}
					random_country = {
						limit = {
							is_same_value = event_target:crisis_var
						}
						change_variable = {
							which = "crisis_threat_count"
							value = 3
						}
					}

					# 25 systems
					if = {
						limit = {
							num_owned_planets > 24
						}
						random_country = {
							limit = {
								is_same_value = event_target:crisis_var
							}
							change_variable = {
								which = "crisis_threat_count"
								value = 3
							}
						}
					}
				}
			}
		}

		random_country = {
			limit = {
				is_same_value = event_target:crisis_var
			}

			if = {
				limit = {
					check_variable = {
						which = "crisis_threat_count"
						value > 1
					}
				}
				set_global_flag = crisis_threat_low

				if = {
					limit = {
						check_variable = {
							which = "crisis_threat_count"
							value > 8
						}
					}
					set_global_flag = crisis_threat_med

					if = {
						limit = {
							check_variable = {
								which = "crisis_threat_count"
								value > 16
							}
						}
						set_global_flag = crisis_threat_high
					}
				}

				every_country = {
					limit = {
						is_ai = no
						OR = {
							is_country_type = default
							is_country_type = fallen_empire
						}
					}

					save_event_target_as = crisis_checker

					every_country = {
						limit = {
							has_communications = PREV
							NOT = { is_country = PREV }
							OR = {
								is_country_type = default
								is_country_type = fallen_empire
							}
						}

						add_opinion_modifier = { who = event_target:crisis_checker modifier = opinion_crisis_threat }
						if = {
							limit = {
								has_global_flag = crisis_threat_med
							}
							add_opinion_modifier = { who = event_target:crisis_checker modifier = opinion_crisis_threat }

							if = {
								limit = {
									has_global_flag = crisis_threat_high
								}
								add_opinion_modifier = { who = event_target:crisis_checker modifier = opinion_crisis_threat }
							}
						}
					}
				}

				# remove global flags
				if = {
					limit = {
						has_global_flag = crisis_threat_low
					}

					remove_global_flag = crisis_threat_low
				}

				if = {
					limit = {
						has_global_flag = crisis_threat_med
					}

					remove_global_flag = crisis_threat_med
				}

				if = {
					limit = {
						has_global_flag = crisis_threat_high
					}

					remove_global_flag = crisis_threat_high
				}
			}
		}
	}
}

# Test event
country_event = {
	id = isb.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		capital_scope = {
			solar_system = {
				random_system_planet  = {
					limit = {
						is_star = yes
					}
					save_event_target_as = test_spawn_loc
				}
			}
		}



		create_country = {
			name = "Test country"
			type = bunny
		}
		last_created_country = {
			establish_communications_no_message = ROOT
			establish_contact = { who = ROOT }
			save_event_target_as = bunny1
			#declare_war = ROOT

			create_fleet = {
				effect = {
					#set_owner = event_target:bunny1
					create_ship = {
						name = random
						design = "Avatar"
					}
					set_location = {
						target = event_target:test_spawn_loc
						distance = 1
					}
					set_fleet_stance = aggressive
				}

			}

			#declare_war = ROOT
		}

		create_country = {
			name = "Test country2"
			type = bunny
		}
		last_created_country = {
			establish_communications_no_message = ROOT
			establish_contact = { who = ROOT }
			establish_communications_no_message = event_target:bunny1
			establish_contact = { who = event_target:bunny1 }
			save_event_target_as = bunny2

			create_fleet = {
				effect = {
					#set_owner = event_target:bunny2
					create_ship = {
						name = random
						design = "Avatar"
					}
					set_location = {
						target = event_target:test_spawn_loc
						distance = 1
					}
					set_fleet_stance = aggressive
				}
			}

			save_event_target_as = bunny2
			declare_war = event_target:bunny1
			#declare_war = ROOT
		}
	}
}

# Test event 2
fleet_event = {
	id = isb.4
	hide_window = no
	is_triggered_only = yes

	picture = GFX_evt_physics_research

	title = ftl_trigger

	desc = {
		text = you_are_system
	}

	trigger = {
		any_system = {
			has_star_flag = flag_galaxy_ftl_trap
			distance = {
				source = PREV
				max_distance = 200 #50
			}
		}
	}

	immediate = {
		if = {
			limit = {
				OWNER = {
					is_ai = no
				}
			}


			#queue_actions = {
			#	move_to = event_target:ftl_trap_system
			#}

			fleet_event = { id = isb.5 days = 5 }

		}
	}

	option = {
		name = ftl_trap
	}
}

# Test event 2
fleet_event = {
	id = isb.5
	hide_window = no
	is_triggered_only = yes

	picture = GFX_evt_physics_research

	title = ftl_trigger_2

	desc = {
		text = you_are_trap
	}

	immediate = {
		OWNER = { save_event_target_as = ftl_trap_owner}
		random_system = {
			limit = {
				distance = {
					source = PREV
					max_distance = 10 #50
				}
				has_star_flag = flag_galaxy_ftl_trap
			}
			save_event_target_as = ftl_trap_system

			random_system_planet = {
				limit = {
					is_star = yes
				}

				save_event_target_as = ftl_trap_star
				enable_special_project = {
					name = "PROJ_AVATAR_CONSTRUCT_01"
					location = THIS
					OWNER = event_target:ftl_trap_owner
				}
			}
		}

		clear_orders = yes
		set_location = {
			target = event_target:ftl_trap_star
			distance = 10
			angle = random
		}
	}

	option = {
		name = ftl_trap_2
	}
}